Feature Scaling helps normalize data so that features contribute equally to the model.

Types of Scaling:
1. Standardization (Z-score Normalization):
 * Transforms data to have a mean = 0 and std = 1.
 * Formula: 𝑧 = (𝑥−mean)/std deviation
 * Use when: Data is normally distributed.

2. Min-Max Scaling:
 * Scales features to a 0–1 range.
 * Formula: 𝑥′ = (𝑥−min)/(max−min)
 * Use when: Want bounded data (e.g., neural networks).

3. Robust Scaling:
 * Uses median and IQR instead of mean/std.
 * Formula: 𝑥′ = (𝑥−median)/IQR 
 * Use when: Data has outliers.
---------------------------------------------------------------------------
Problem:
You're given an Excel sheet containing height, weight, and income of marathon participants.

Write a function `scale_features` that:
1. Reads the data from an Excel file (`participants.xlsx`), Sheet1.
2. Applies:
   - Standard Scaling on 'height',
   - Min-Max Scaling on 'weight',
   - Robust Scaling on 'income'.
3. Writes the result to a new sheet called "result" (create or overwrite it).

Assume columns are:
['name', 'height', 'weight', 'income']

Function Signature:
def scale_features(file_path: str) -> None:
"""


Sample Input Excel:
Sheet Name: sampledata

| name  | height | weight | income |
| ----- | ------ | ------ | ------ |
| Alice | 165    | 60     | 35000  |
| Bob   | 180    | 80     | 200000 |
| Carol | 155    | 50     | 30000  |
| Dave  | 170    | 70     | 50000  |
---------------------------------------------------------------------------
Sample Output Excel:

| name  | height | weight | income | height_scaled | weight\_scaled | income_scaled |
| ----- | ------ | ------ | ------ | -------------- | -------------- | -------------- |
| Alice | 165    | 60     | 35000  | -0.12          | 0.33           | 0.05           |
| Bob   | 180    | 80     | 200000 | 1.34           | 1.00           | 4.25           |
| Carol | 155    | 50     | 30000  | -1.09          | 0.00           | 0.00           |
| Dave  | 170    | 70     | 50000  | -0.13          | 0.67           | 0.25           |
---------------------------------------------------------------------------